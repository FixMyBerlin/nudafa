---
import { Image } from 'astro:assets'
import ProseMarkdown from '../ProseMarkdown.astro'
import { MeasureMap } from './MeasuresMap'
import { getGeometryByNudafaId } from 'src/utils/getGeometryByNudafaId'

type Props = {
  measure: any
}

const { measure } = Astro.props
const { Content } = await measure.render()
// console.log({ measure })
const features = measure.data.nudafa_id ? getGeometryByNudafaId(measure.data.nudafa_id) : undefined
---

<div class="flex flex-col gap-4">
  <div>
    {
      features ? (
        <div>
          <div>
            <h2 class="font-bold">Geometrie</h2>
            <code>
              <pre>
                {JSON.stringify(
                  features.map((f) => f.properties),
                  null,
                  2
                )}
              </pre>
            </code>
          </div>
          <div class="h-[600px] w-[800px]">
            <MeasureMap client:load geometry={features} />
          </div>
        </div>
      ) : (
        <div>k. Geometrie vorhanden</div>
      )
    }
    <div>
      <h2 class="font-bold">Meta Daten aus MDX</h2>
      <code>
        <pre>
      {JSON.stringify(measure, null, 2)}
    </pre>
      </code>
    </div>
  </div>
  <div>
    {
      measure.data.image && (
        <Image
          src={measure.data.image}
          alt=""
          class="aspect-[3/2] w-full shrink-0 object-cover md:h-[200px] md:w-auto md:pt-2 lg:h-[250px]"
        />
      )
    }
    {
      measure.data.imageCopyright && (
        <figcaption class="mt-2 text-left text-xs text-gray-400 md:text-sm">
          Â© {measure.data.imageCopyright}
        </figcaption>
      )
    }
  </div>
  <h2 class="font-bold">Markdown aus MDX</h2>
  <ProseMarkdown>
    <Content />
  </ProseMarkdown>
</div>
