---
import PartnerLabel from '@components/PartnerLabel.astro'

import { format, isPast } from 'date-fns'
import CommuneLabelList from './CommuneLabelList.astro'
import TableRow from './TableRow.astro'
import { getCollection } from 'astro:content'
import { TopicLabel } from './TopicLabel'

type Props = {
  start: Date
  end?: Date
  communes?: string[]
  projectPartners: string[]
  funding?: string
  topics: string[]
}
const subTopics = await getCollection('subprojectstopics')
const { start, end, communes, projectPartners, funding, topics } = Astro.props
const isProjectPast = end && isPast(end)
---

<div
  class="flex flex-col divide-y divide-gray-200 rounded-sm border border-gray-200 text-gray-500 shadow-lg"
>
  <TableRow>
    <p class="min-w-[200px] flex-shrink-0">Themen</p>
    <ul class="flex flex-wrap gap-2">
      {
        !!topics?.length ? (
          topics.map((topic) => (
            <li>
              <TopicLabel subTopics={subTopics} topic={topic} />
            </li>
          ))
        ) : (
          <span>-</span>
        )
      }
    </ul>
  </TableRow>
  <TableRow>
    <p class="min-w-[200px] flex-shrink-0">Beteiligte Projektpartner</p>
    <ul class="flex flex-wrap gap-2">
      {!!communes?.length && <CommuneLabelList communeIds={communes} />}
      {
        !!projectPartners?.length &&
          projectPartners.map((partner) => (
            <li>
              <PartnerLabel partnerId={partner} />
            </li>
          ))
      }
    </ul>
  </TableRow>
  <TableRow>
    <p class="min-w-[200px] flex-shrink-0">Projektlaufzeit</p>
    <p class="font-semibold text-black">
      {
        isProjectPast
          ? `Laufzeit: ${format(start, 'MM/yyyy')} bis ${format(end, 'MM/yyyy')}`
          : 'Beginn ' + format(start, 'MM/yyyy')
      }
    </p>
  </TableRow>
  <TableRow>
    <p class="min-w-[200px] flex-shrink-0 py-4">Finanzierung</p>
    <p class="font-semibold text-black">
      {funding || '-'}
    </p>
  </TableRow>
</div>
